author = "Conroy";
OnLoadName = "PvP Framework";
OnLoadMission = "v x.x";
loadScreen = "resources\loading_2.paa";

// corpse + wreck manager

corpseManagerMode = 1;
corpseLimit = 20;
corpseRemovalMinTime = 30; //seconds
corpseRemovalMaxTime = 30; //seconds

wreckManagerMode = 0;
wreckLimit = 10;
wreckRemovalMinTime = 0; //seconds
wreckRemovalMaxTime = 120; //second

// Respwan

respawn = BASE;
respawndelay = 8;
respawnDialog = 0;

respawnTemplates[] = {"Base"};

// Other

forceRotorLibSimulation = 1; //force enable
//showGroupIndicator = 1;

debriefing = 0;

AIkills = 0;
disabledAI = 1;
showWatch = 1;

joinUnassigned = 0;
enableDebugConsole = 1;
allowFunctionsRecompile = 1;

disableChannels[]={0,2,3};
enableItemsDropping = 0;

class Header{
	gameType = CTI;
	minPlayers = 1;
	maxPlayers = 120;
};

class CfgRemoteExec
{
	// List of script functions allowed to be sent from client via remoteExec
	class Functions
	{
		mode = 1;
		allowedTargets=1;
		jip = 0;
		class BIS_fnc_showNotification{};
	};
	// List of script commands allowed to be sent from client via remoteExec
	class Commands
	{
		mode = 1;
		allowedTargets=1;
		jip = 0;
		class systemChat{};
	}; // can target anyone, sending jip is turned off (overrides settings in the Commands class)
};

#include "resources\common.hpp"
//#include "\ui_f\a3\ui_f\config.cpp"

#include "module_wargames\module_assets\construction\dialog.hpp" //used by the construction module. Needs to be commented out if the module is not used
#include "module_wargames\module_teams\dialog.hpp" //used by the construction module. Needs to be commented out if the module is not used
//#include "module_artillery\dialog.hpp" //interface to move cargo from different crates

class pvpfw_core_dialog {
	idd = -1;
	onLoad = "uiNamespace setVariable['pvpfw_core_dialog',_this select 0];";
};

class CfgFunctions
{
	class pvpfw
	{
		#include "module_core\cfgFunctions.hpp"
		#include "module_markerIntercept\cfgFunctions.hpp"
		//#include "module_tfr\cfgFunctions.hpp"
	};
};
/*
class RscTitles{
	class pvpfw_tfr_whoIsTalking {
		idd = -1;

		onLoad = "uiNamespace setVariable['pvpfw_tfr_whoIsTalking',_this select 0];";

		movingEnable = 1;
		duration = 99999;
		controls[] = {"RscStructuredText_1"};
		class RscStructuredText_1: RscStructuredText
		{
			idc = 1;
			size = "(safezoneH / 40) * 0.9";
			w = 6 * (safezoneW / 40);
			h = 11 * (safezoneH / 25);
			x = 34 * (safezoneW / 40) + (safezoneX);
			y = 9 * (safezoneH / 25) + (safezoneY);
		};
	};
	class pvpfw_coreTitle{
		idd = -1;

		onLoad = "uiNamespace setVariable['pvpfw_coreTitle',_this select 0];";

		movingEnable = 1;
		duration = 120;
		controls[] = {"RscStructuredText_1"};
		class RscStructuredText_1: RscStructuredText
		{
			idc = 1;
			size = "(safezoneH / 40) * 1";
			x = safezoneX;
			y = 6 * (safezoneH / 25) + (safezoneY);
			w = safezoneW;
			h = 12 * GUI_GRID_H;
		};
	};
};
*/

/*
class CfgSounds{
	class my_test_sound
	{
		name = "test_name";
		sound[] = {"a3\sounds_f\debugsound", 1, 1};
		titles[] = {};
	};
};
*/

class CfgNotifications
{
	class pvpfw_default
	{
		title = "%1"; // Tile displayed as text on black background. Filled by arguments.
		iconPicture = "\a3\ui_f\data\map\Diary\signal_ca.paa"; // Small icon displayed in left part. Colored by "color", filled by arguments.
		iconText = ""; // Short text displayed over the icon. Colored by "color", filled by arguments.
		description = "%2"; // Brief description displayed as structured text. Colored by "color", filled by arguments.
		color[] = {1,1,1,1}; // Icon and text color
		duration = 6; // How many seconds will the notification be displayed
		priority = 10; // Priority; higher number = more important; tasks in queue are selected by priority
		difficulty[] = {}; // Required difficulty settings. All listed difficulties has to be enabled
	};
	class pvpfw_notification_infoLong
	{
		title = "%1"; // Tile displayed as text on black background. Filled by arguments.
		iconPicture = "\a3\ui_f\data\map\Diary\signal_ca.paa"; // Small icon displayed in left part. Colored by "color", filled by arguments.
		iconText = ""; // Short text displayed over the icon. Colored by "color", filled by arguments.
		description = "%2"; // Brief description displayed as structured text. Colored by "color", filled by arguments.
		color[] = {1,1,1,1}; // Icon and text color
		duration = 8; // How many seconds will the notification be displayed
		priority = 10; // Priority; higher number = more important; tasks in queue are selected by priority
		difficulty[] = {}; // Required difficulty settings. All listed difficulties has to be enabled
	};
	class pvpfw_notification_infoShort
	{
		title = "%1"; // Tile displayed as text on black background. Filled by arguments.
		iconPicture = "\a3\ui_f\data\map\Diary\signal_ca.paa"; // Small icon displayed in left part. Colored by "color", filled by arguments.
		iconText = ""; // Short text displayed over the icon. Colored by "color", filled by arguments.
		description = "%2"; // Brief description displayed as structured text. Colored by "color", filled by arguments.
		color[] = {1,1,1,1}; // Icon and text color
		duration = 2; // How many seconds will the notification be displayed
		priority = 10; // Priority; higher number = more important; tasks in queue are selected by priority
		difficulty[] = {}; // Required difficulty settings. All listed difficulties has to be enabled
	};
	class pvpfw_hint
	{
		title = "%1"; // Tile displayed as text on black background. Filled by arguments.
		iconPicture = "\a3\ui_f\data\map\Diary\signal_ca.paa"; // Small icon displayed in left part. Colored by "color", filled by arguments.
		iconText = ""; // Short text displayed over the icon. Colored by "color", filled by arguments.
		description = "%2"; // Brief description displayed as structured text. Colored by "color", filled by arguments.
		color[] = {1,1,1,1}; // Icon and text color
		duration = 5; // How many seconds will the notification be displayed
		priority = 10; // Priority; higher number = more important; tasks in queue are selected by priority
		difficulty[] = {}; // Required difficulty settings. All listed difficulties has to be enabled
	};
};

class CfgDebriefing
{
	class pvpfw_debrief_default
	{
		title = "Mission Completed 1234567890";
		subtitle = "test 1";
		description = "test 2";
		pictureBackground = "";
		picture = "";
		//pictureColor[] = {0.0,0.3,0.6,1};
	};
};
/*
class CfgDebriefingSections
{
	class dsf45435tttt
	{
		title = "var_title";
		variable = "pvpfw_active";
	};
};
